#!/usr/bin/env bash
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source=bin/dev-env-sysden64
source ./bin/dev-env-sysden64 || exit 1
# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-xsv.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-bsh.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-rnd.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-iam.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-cnt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1

#
# Functions
#

function dev_lab_open() {
  bl64_dbg_app_show_function
  bl64_msg_show_task "open sandbox environment"
  if [[ -n "$DEV_LAB_SYSDEN64_CONTAINER_USER_CREATE" ]]; then
    bl64_fs_dir_create \
      "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" \
      "$DEV_LAB_SYSDEN64_PATH_DEN" &&
      bl64_cnt_run_interactive \
        --network=host \
        --user='root' \
        --workdir="$DEV_LAB_SYSDEN64_PATH_ROOT_CONTAINER" \
        --entrypoint="$DEV_LAB_SYSDEN64_SCRIPT_ENTRYPOINT" \
        --env "SYSDEN64_PATH_ROOT=${DEV_LAB_SYSDEN64_PATH_SD64_CONTAINER}" \
        --env "SYSDEN64_PATH_BL64=${DEV_LAB_SYSDEN64_PATH_BL64_CONTAINER}" \
        --env 'DEV_PROFILE' \
        --env 'DEV_LIB_SYSDEN64_REPLACE_ENABLED' \
        --env 'DEV_LAB_SYSDEN64_CONTAINER_USER_NAME' \
        --env 'DEV_LAB_SYSDEN64_CONTAINER_USER_UID' \
        --env 'DEV_LAB_SYSDEN64_CONTAINER_USER_HOME' \
        --env 'DEV_LAB_SYSDEN64_CONTAINER_USER_CREATE' \
        --env 'DEV_LAB_SYSDEN64_PATH_ROOT_CONTAINER' \
        --env 'DEV_LAB_SYSDEN64_PATH_HOME_CONTAINER' \
        --mount "type=bind,source=${DEV_PATH_ROOT},target=${DEV_LAB_SYSDEN64_PATH_ROOT_CONTAINER}" \
        --mount "type=bind,source=${DEV_LAB_SYSDEN64_PATH_DEN},target=${DEV_LAB_SYSDEN64_CONTAINER_USER_HOME}" \
        "${DEV_ENV_SYSDEN64_REGISTRY}/${DEV_LAB_SYSDEN64_CONTAINER}"
  else
    bl64_cnt_run_interactive \
      --network=host \
      --workdir="$DEV_LAB_SYSDEN64_PATH_ROOT_CONTAINER" \
      --mount "type=bind,source=${DEV_PATH_ROOT},target=${DEV_LAB_SYSDEN64_PATH_ROOT_CONTAINER}" \
      "${DEV_ENV_SYSDEN64_REGISTRY}/${DEV_LAB_SYSDEN64_CONTAINER}"
  fi
}

function dev_lab_initialize() {
  bl64_check_export 'DEV_PROFILE' &&
    bl64_dbg_app_show_function
  bl64_cnt_setup &&
    bl64_msg_show_setup 'Sysden64 Lab Container' \
      'DEV_PROFILE' \
      'DEV_ENV_SYSDEN64_REGISTRY' \
      'DEV_LAB_SYSDEN64_CONTAINER' \
      'DEV_LAB_SYSDEN64_CONTAINER_USER_NAME' \
      'DEV_LAB_SYSDEN64_CONTAINER_USER_UID' \
      'DEV_LAB_SYSDEN64_CONTAINER_USER_HOME' \
      'DEV_LAB_SYSDEN64_PATH_DEN' \
      'DEV_LIB_SYSDEN64_REPLACE_ENABLED'
}

#
# Main
#

declare DEV_LAB_SYSDEN64_CONTAINER="${1:-$DEV_LAB_SYSDEN64_CONTAINER}"
[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable
bl64_lib_script_version_set '5.0.0'
bl64_msg_all_enable_verbose

bl64_msg_show_batch_start "$BL64_SCRIPT_ID"
dev_lab_initialize &&
  dev_lab_open
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
