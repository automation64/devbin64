#!/usr/bin/env bash
#
# Development environment / Global variables
#
# * Used by DevBin64 to define project wide variables
# * Automatically loaded by dev-set
# * Do not include local variables (workstation specific) and secrets. Use .local.env and .secrets.env instead
# * Version: 4.1.0
#

# Main / Base file and directory names
export DEV_BASE_BUILD="build"
export DEV_BASE_CHANGELOG="CHANGELOG.md"
export DEV_BASE_DOT_LOCAL="dot.local.env"
export DEV_BASE_DOT_SECRETS="dot.secrets.env"
export DEV_BASE_ENV=".env"
export DEV_BASE_GITKEEP=".gitkeep"
export DEV_BASE_LOCAL=".local.env"
export DEV_BASE_POST=".post.env"
export DEV_BASE_PROFILE="prof"
export DEV_BASE_SECRETS=".secrets.env"
export DEV_BASE_SRC="src"
export DEV_BASE_TEST="test"

# Main / Project source code
export DEV_PATH_SRC="${DEV_PATH_ROOT}/${DEV_BASE_SRC}"

# Main / Project test code
export DEV_PATH_TEST="${DEV_PATH_ROOT}/${DEV_BASE_TEST}"

# Main / Project configuration files
export DEV_PATH_ETC="${DEV_PATH_ROOT}/etc"

# Main / Project documentation
export DEV_PATH_DOCS="${DEV_PATH_ROOT}/docs"

# Main / DevOps scripts
export DEV_PATH_BIN="${DEV_PATH_ROOT}/bin"

# Main / DevOps persistent data
export DEV_PATH_VAR="${DEV_PATH_ROOT}/var"

# Main / DevOps ephemeral tools. Content excluded from GIT
export DEV_PATH_LIB="${DEV_PATH_ROOT}/lib"

# Main / DevOps builds. Content excluded from GIT
export DEV_PATH_BUILD="${DEV_PATH_ROOT}/${DEV_BASE_BUILD}"
export DEV_PATH_BUILD_PREPARE="${DEV_PATH_BUILD}/prepare"
export DEV_PATH_BUILD_STAGING="${DEV_PATH_BUILD}/staging"
export DEV_PATH_BUILD_PACK="${DEV_PATH_BUILD}/pack"

# Main / DevOps local vault for secrets. Content excluded from GIT
export DEV_PATH_VAULT="${DEV_PATH_ROOT}/vault"

# Main / DevOps logs store. Content excluded from GIT
export DEV_PATH_LOGS="${DEV_PATH_ROOT}/logs"

# Main / DevOps ephemeral data. Content excluded from GIT
export DEV_PATH_TMP="${DEV_PATH_ROOT}/tmp"

# Main / Profile dependant variables
export DEV_PROFILE="${DEV_PROFILE:-default}"
export DEV_PATH_PROF_BUILD="${DEV_PATH_BUILD}/${DEV_BASE_PROFILE}/${DEV_PROFILE}"
export DEV_PATH_PROF_ETC="${DEV_PATH_ETC}/${DEV_BASE_PROFILE}/${DEV_PROFILE}"
export DEV_PATH_PROF_LOGS="${DEV_PATH_LOGS}/${DEV_BASE_PROFILE}/${DEV_PROFILE}"
export DEV_PATH_PROF_TMP="${DEV_PATH_TMP}/${DEV_BASE_PROFILE}/${DEV_PROFILE}"
export DEV_PATH_PROF_VAR="${DEV_PATH_VAR}/${DEV_BASE_PROFILE}/${DEV_PROFILE}"
export DEV_PATH_PROF_VAULT="${DEV_PATH_VAULT}/${DEV_BASE_PROFILE}/${DEV_PROFILE}"

#
# DevOps Tools
#

# Main / List of modules to load
export DEV_MODULE_LOAD=""

# Release / GitHub / Repository Owner
export DEV_RELEASE_GITHUB_REPO_OWNER='automation64'
# Release / GitHub / Repository Name
export DEV_RELEASE_GITHUB_REPO_NAME='devbin64'

# Lint / TestmanSH / Sources
export DEV_LINT_TESTMANSH_SOURCE=''
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/ansible/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/ansiblelint/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/argocd/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/bash/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/bashlib64/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/container/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/cosign/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/devbin64/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/git/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/github/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/go/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/hadolint/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/helm/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/installer64/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/kind/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/kubelint/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/kubescape/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/mkdocs/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/project/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/shellcheck/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/taskfile/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/testmansh/bin"
DEV_LINT_TESTMANSH_SOURCE+=" ${DEV_BASE_SRC}/lib/yamllint/bin"

#
# Project specific variables
#

# Pack / Project / Assets to include in the package
export DEV_PACK_PROJECT_ASSETS=''
DEV_PACK_PROJECT_ASSETS+=" ${DEV_PATH_SRC}/lib/devbin64/bin/dev-bootstrap"
# Pack / Project / Package file name
export DEV_PACK_PROJECT_BUNDLE='devbin64.tar.gz'
# Pack / Project / List of generated distributable files
export DEV_PACK_PROJECT_DISTRIBUTABLE="${DEV_PATH_BUILD_PACK}/${DEV_PACK_PROJECT_BUNDLE}"

# Release / GitHub / Artifact path
export DEV_RELEASE_GITHUB_ARTIFACT="${DEV_PACK_PROJECT_DISTRIBUTABLE}"

# Project / Local source for testing
export DEV_BOOTSTRAP_PATH_ROOT="${DEV_PATH_SRC}"
